buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'project-report'
    id 'jacoco'
    //id 'org.sonarqube' version '4.4.1.3373'
}

allprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
        withSourcesJar()
        withJavadocJar()
    }

    dependencies {
        // Lombok dependencies
        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        testCompileOnly 'org.projectlombok:lombok:1.18.30'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

        // Test framework dependencies - MOVED HERE
        testImplementation platform('org.junit:junit-bom:5.13.4')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
        testImplementation('org.junit.jupiter:junit-jupiter-api')
        testImplementation("org.assertj:assertj-core:3.27.6")
        testImplementation 'org.springframework:spring-test:6.1.10'
        testImplementation 'org.mockito:mockito-junit-jupiter:5.20.0'
        testImplementation 'org.mockito:mockito-core:5.20.0'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // ADDED
        testRuntimeOnly 'com.h2database:h2:2.2.224' // MOVED HERE
    }

    test {
        useJUnitPlatform()
        include '**/*Test.class'
        testLogging {
            events "passed", "skipped", "failed"
        }
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = true
            html.required = true
        }
    }

    task projectDependencyReport(type: DependencyReportTask) {
        outputFile = file("${buildDir}/reports/dependencies/${project.name}.txt")
    }
}

dependencies {
    // Spring Framework
    implementation 'org.springframework:spring-orm:6.1.11'
    implementation 'org.springframework.data:spring-data-jpa:3.3.2'
    implementation 'org.springframework.data:spring-data-commons:3.3.2'

    // YAML support
    implementation 'org.springframework:spring-beans:6.1.11'
    implementation 'org.yaml:snakeyaml:2.2'

    implementation platform('com.fasterxml.jackson:jackson-bom:2.19.2')
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Jakarta EE
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    implementation 'jakarta.el:jakarta.el-api:4.0.0'
    implementation 'org.glassfish:jakarta.el:4.0.2'

    // Hibernate
    implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'com.zaxxer:HikariCP:5.0.1'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j:8.2.0'

    // Logging
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.23.1'
    implementation 'org.slf4j:slf4j-api:2.0.7'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.fork = true
}

htmlDependencyReport {
    projects = project.allprojects
    outputFile = file("${buildDir}/reports/dependencies/root.html")
}

task allDependencyReports {
    dependsOn htmlDependencyReport, projectDependencyReport
    group = 'Reporting'
    description = 'Generates all dependency reports'
}

task dependencyTree(type: DependencyReportTask) {
    outputFile = file("${buildDir}/reports/dependencies/tree.txt")
}